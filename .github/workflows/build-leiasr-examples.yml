name: Build LeiaSR SDK Examples

on:
  push:
    branches: [ main ]
    paths:
      - 'LeiaSR-SDK-*/**'
      - '.github/workflows/build-leiasr-examples.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'LeiaSR-SDK-*/**'
      - '.github/workflows/build-leiasr-examples.yml'
  workflow_dispatch:

env:
  SDK_VERSION: '1.34.8-RC1'

jobs:
  build-examples:
    name: Build Examples on Windows
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        example:
          - c
          - cpp
          - opengl_weaving
          - directx9_weaving
          - directx10_weaving
          - directx11_weaving
          - directx12_weaving
          - gesturerecognizer
          - lenshints
          - predictingeyetracker
          - systemsense

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.21.x'

    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2

    - name: Set SDK root environment variable
      shell: pwsh
      run: |
        $sdkPath = Resolve-Path "LeiaSR-SDK-${{ env.SDK_VERSION }}-win64"
        echo "LEIASR_SDKROOT=$sdkPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "SDK path set to: $sdkPath"

    - name: Verify SDK structure
      shell: pwsh
      run: |
        Write-Host "Checking SDK structure..."
        Test-Path "$env:LEIASR_SDKROOT" -PathType Container
        Test-Path "$env:LEIASR_SDKROOT/include" -PathType Container
        Test-Path "$env:LEIASR_SDKROOT/lib" -PathType Container
        Test-Path "$env:LEIASR_SDKROOT/examples/${{ matrix.example }}" -PathType Container
        Write-Host "SDK structure verified"

    - name: Configure CMake for ${{ matrix.example }}
      shell: pwsh
      run: |
        $examplePath = "$env:LEIASR_SDKROOT/examples/${{ matrix.example }}"
        $buildPath = "${{ github.workspace }}/build/${{ matrix.example }}"

        Write-Host "Configuring ${{ matrix.example }}..."
        Write-Host "Example path: $examplePath"
        Write-Host "Build path: $buildPath"

        cmake -S "$examplePath" -B "$buildPath" `
          -DCMAKE_PREFIX_PATH="$env:LEIASR_SDKROOT/lib/cmake" `
          -DLEIASR_SDKROOT="$env:LEIASR_SDKROOT" `
          -DCMAKE_BUILD_TYPE=Release

    - name: Build ${{ matrix.example }}
      shell: pwsh
      run: |
        $buildPath = "${{ github.workspace }}/build/${{ matrix.example }}"

        Write-Host "Building ${{ matrix.example }}..."
        cmake --build "$buildPath" --config Release

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: example-${{ matrix.example }}-build
        path: |
          build/${{ matrix.example }}/Release/*.exe
          build/${{ matrix.example }}/*.exe
        retention-days: 7
        if-no-files-found: warn

  build-csharp:
    name: Build C# Examples
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.21.x'

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    - name: Install .NET Framework 4.6.1 Developer Pack
      shell: pwsh
      run: |
        Write-Host "Installing .NET Framework 4.6.1 Developer Pack..."
        $url = "https://go.microsoft.com/fwlink/?linkid=2099470"
        $output = "$env:TEMP\ndp461-devpack.exe"
        Invoke-WebRequest -Uri $url -OutFile $output
        Start-Process -FilePath $output -ArgumentList "/quiet", "/norestart" -Wait
        Write-Host ".NET Framework 4.6.1 Developer Pack installed"

    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2

    - name: Set SDK root environment variable
      shell: pwsh
      run: |
        $sdkPath = Resolve-Path "LeiaSR-SDK-${{ env.SDK_VERSION }}-win64"
        echo "LEIASR_SDKROOT=$sdkPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "SDK path set to: $sdkPath"

    - name: Configure CMake for C# examples
      shell: pwsh
      run: |
        $examplePath = "$env:LEIASR_SDKROOT/examples/csharp"
        $buildPath = "${{ github.workspace }}/build/csharp"

        Write-Host "Configuring C# examples..."
        cmake -S "$examplePath" -B "$buildPath" `
          -DCMAKE_PREFIX_PATH="$env:LEIASR_SDKROOT/lib/cmake" `
          -DLEIASR_SDKROOT="$env:LEIASR_SDKROOT" `
          -DCMAKE_BUILD_TYPE=Release

    - name: Build C# examples
      shell: pwsh
      run: |
        $buildPath = "${{ github.workspace }}/build/csharp"

        Write-Host "Building C# examples..."
        cmake --build "$buildPath" --config Release

    - name: Upload C# build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: example-csharp-build
        path: |
          build/csharp/Release/*.exe
          build/csharp/Release/*.dll
          build/csharp/*.exe
          build/csharp/*.dll
        retention-days: 7
        if-no-files-found: warn

  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [build-examples, build-csharp]
    if: always()

    steps:
    - name: Check build results
      run: |
        echo "## LeiaSR SDK Examples Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Build Status: ${{ needs.build-examples.result }}" >> $GITHUB_STEP_SUMMARY
        echo "C# Build Status: ${{ needs.build-csharp.result }}" >> $GITHUB_STEP_SUMMARY
